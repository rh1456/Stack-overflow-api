// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Stack_overflow_api.Models;

namespace Stackoverflowapi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200109210312_AddedTables")]
    partial class AddedTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Stack_overflow_api.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("PostContent")
                        .HasColumnType("text");

                    b.Property<DateTime>("PostCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PostDownVote")
                        .HasColumnType("integer");

                    b.Property<int?>("PostId")
                        .HasColumnType("integer");

                    b.Property<string>("PostTitle")
                        .HasColumnType("text");

                    b.Property<int>("PostUpVote")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Stack_overflow_api.Models.Response", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int?>("PostId")
                        .HasColumnType("integer");

                    b.Property<int>("RespDownVote")
                        .HasColumnType("integer");

                    b.Property<int>("RespUpvote")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("Stack_overflow_api.Models.Post", b =>
                {
                    b.HasOne("Stack_overflow_api.Models.Post", null)
                        .WithMany("Posts")
                        .HasForeignKey("PostId");
                });

            modelBuilder.Entity("Stack_overflow_api.Models.Response", b =>
                {
                    b.HasOne("Stack_overflow_api.Models.Post", "Posts")
                        .WithMany()
                        .HasForeignKey("PostId");
                });
#pragma warning restore 612, 618
        }
    }
}
